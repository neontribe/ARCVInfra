- name: Playbook to release laravel (Store/Service)
  hosts: myservers
  become: yes
  tasks:

    - name: Set deploy dir
      set_fact:
        release_dir: "/var/www/ARCVService/releases/ARCVService-{{ tag }}"

    - name: Ensure release dir
      file:
        path: "{{ release_dir }}"
        state: directory
        owner: "{{ ansible_ssh_user }}"
        group: "{{ ansible_ssh_user }}"
        mode: u=rwX,g=rX,o=rX
      become: yes

    - name: Get release
      get_url:
        url: https://github.com/neontribe/ARCVService/archive/refs/tags/{{ tag }}.tar.gz
        dest: /tmp/release-{{ tag }}.tgz
        mode: '0664'

    - name: Unpack release
      unarchive:
        src: /tmp/release-{{ tag }}.tgz
        dest: "{{ release_dir }}"
        extra_opts:
          - "--strip-components=1"
        remote_src: yes

    - name: Clean up un-needed files
      file:
        path: "{{ release_dir }}/{{ item }}"
        state: absent
      with_items:
        - .docker
        - docker-compose.yml
        - Dockerfile
        - Docker.md
        - env.example
        - env.travis
        - .gitattributes
        - .gitignore
        - INSTALL.md
        - makedeploy.sh
        - Makefile
        - phpunit.xml
        - README.md
        - staging_rsa.enc
        - UPGRADE_NOTES.md
        - tests
        - .travis.yml

    - name: Ensure storage dirs
      file:
        path: "{{ release_dir }}/{{ item }}"
        state: directory
      with_items:
        - storage/app
        - storage/framework/cache
        - storage/framework/views
        - storage/framework/sessions
        - storage/logs

    - name: Composer install
      composer:
        command: install
        working_dir: "{{ release_dir }}"
        arguments: --no-ansi
      environment:
        COMPOSER_ALLOW_SUPERUSER: 1

    - name: Yarn install
      shell: yarn install --production=true
      args:
        executable: /bin/bash
        chdir: "{{ release_dir }}"

    - name: Yarn build
      shell: yarn production
      args:
        executable: /bin/bash
        chdir: "{{ release_dir }}"

    - name: Update version.txt
      shell: "echo {{ tag }} > version.txt"
      args:
        executable: /bin/bash
        chdir: "{{ release_dir }}"

    - name: Ensure ownership (web)
      file:
        dest: "{{ release_dir }}"
        owner: "{{ webuser }}"
        group: "{{ webuser }}"
        mode: u=rwX,g=rwX,o=rX
        recurse: yes
      become: yes

    - name: Restore se linux context just in case
      shell: restorecon -R /var/www/ARCVService

