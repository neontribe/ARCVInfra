- name: Playbook to dump SQL db (Store/Service)
  hosts: myservers
  become: yes

  tasks:

    - name: Ensure sql dump dir
      file:
        path: /var/www/ARCVService/db-dumps
        state: directory
        mode: '0755'

    - name: Get current release
      stat:
        path: /var/www/ARCVService/current_release
      register: sym

    - name: Set current release name as fact
      set_fact:
        current_release: "{{ sym.stat.lnk_source | basename }}"

    - name: SQL dump file name as fact
      set_fact:
        dump_file: "{{ current_release }}_{{ ansible_date_time.iso8601 }}.sql.gz.enc"

    - name: Dump MySQL database and encrypt without writing to disk
      shell: >
        mysqldump \
          --single-transaction \
          --quick \
          --lock-tables=false \
          --databases {{ db_name }} \
          --host 127.0.0.1 \
          --user={{ db_user_name }} \
          --password={{ db_user_password }} \
          | \
          gzip \
          | \
          openssl aes-256-cbc -a -salt \
          -out "/var/www/ARCVService/db-dumps/{{ dump_file }}" \
          -pass pass:{{ db_crypt_password }}

    - name: Make the file readable by neontribe
      file:
        path: "/var/www/ARCVService/db-dumps/{{ dump_file }}"
        mode: '0644'

    - name: Get the dump
      fetch:
        src: "/var/www/ARCVService/db-dumps/{{ dump_file }}"
        dest: dbdumps

# openssl aes-256-cbc -d -a -in /path/to/your/encrypted_output_file -out /path/to/decrypted_output_file -pass pass:your_encryption_password
